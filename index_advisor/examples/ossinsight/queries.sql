use gharchive_dev;
SELECT     COUNT(1) AS cnt,     MAX(created_at) AS latest_created_at,     UNIX_TIMESTAMP(MAX(created_at)) AS latest_timestamp FROM github_events;
SELECT     COUNT(DISTINCT actor_id) AS developers,     COUNT(DISTINCT repo_id) AS repos,     SUM(IF(action = 'closed' AND pr_merged = true, additions, 0)) AS additions,     SUM(IF(action = 'closed' AND pr_merged = true, deletions, 0)) AS deletions,     COUNT(DISTINCT IF(action = 'opened', pr_or_issue_id, NULL)) AS opened_prs,     COUNT(DISTINCT IF(action = 'closed' AND pr_merged = false, pr_or_issue_id, NULL)) AS closed_prs,     COUNT(DISTINCT IF(action = 'closed' AND pr_merged = true, pr_or_issue_id, NULL)) AS merged_prs FROM     github_events ge WHERE     type = 'PullRequestEvent'     AND created_at > DATE_SUB(NOW(), INTERVAL 24 HOUR) ;
WITH stars_per_company AS (     SELECT         IF(             gu.organization_formatted IS NOT NULL AND LENGTH(gu.organization_formatted) != 0,             gu.organization_formatted,             'Unknown'         ) AS company_name,         COUNT(DISTINCT ge.actor_login) AS stargazers     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         ge.repo_id IN (94911145)         AND ge.type = 'WatchEvent'         AND ge.action = 'started'     GROUP BY company_name ), stars_total AS (     SELECT SUM(stargazers) AS total FROM stars_per_company ) SELECT     spc.company_name,     spc.stargazers,     spc.stargazers / st.total AS proportion FROM stars_per_company spc, stars_total st WHERE spc.company_name != 'Unknown' ORDER BY spc.stargazers DESC LIMIT 50;
SELECT * FROM (     SELECT         /*+ READ_FROM_STORAGE(TIKV[github_events]), MAX_EXECUTION_TIME(15000) */         id, type, action, actor_id, actor_login, repo_id, repo_name, number, pr_merged, created_at     FROM github_events     WHERE         created_at BETWEEN (             UTC_TIMESTAMP - INTERVAL 6 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 6 MINUTE) % 5 SECOND         ) AND (             UTC_TIMESTAMP - INTERVAL 5 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 5 MINUTE) % 5 SECOND         )         AND actor_login NOT LIKE '%[bot]'         AND actor_login NOT LIKE '%-bot'         AND type IN (             'WatchEvent', 'ForkEvent', 'IssuesEvent', 'PullRequestEvent', 'PushEvent', 'CreateEvent', 'ReleaseEvent',             'PullRequestReviewCommentEvent', 'PullRequestReviewEvent', 'IssueCommentEvent'         )     LIMIT 50 ) sub ORDER BY created_at DESC ;
WITH group_by_area AS (     SELECT         gu.country_code AS country_or_area,         COUNT(1) as cnt     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         repo_id IN (94911145)         AND ge.type = 'WatchEvent'         AND ge.action = 'started'                  AND gu.country_code NOT IN ('', 'N/A', 'UND')     GROUP BY country_or_area ), summary AS (     SELECT SUM(cnt) AS total FROM group_by_area ) SELECT      country_or_area,     cnt AS count,     cnt / summary.total AS percentage FROM group_by_area, summary ORDER BY cnt DESC ;
SELECT     /*+ MAX_EXECUTION_TIME(15000) */     COUNT(1) AS cnt,     MAX(created_at) AS latest_created_at,     UNIX_TIMESTAMP(MAX(created_at)) AS latest_timestamp FROM github_events WHERE     created_at BETWEEN FROM_UNIXTIME(1705256099) AND (UTC_TIMESTAMP - INTERVAL 5 MINUTE)     AND FROM_UNIXTIME(1705256099) > (UTC_TIMESTAMP - INTERVAL 4 HOUR);
SELECT event_day,   COUNT(DISTINCT actor_id) AS developers,   COUNT(DISTINCT CASE WHEN action = 'opened' THEN pr_or_issue_id ELSE NULL END) AS opened_prs,   COUNT(DISTINCT CASE WHEN action = 'closed' AND pr_merged = false THEN pr_or_issue_id ELSE NULL END) AS closed_prs,   COUNT(DISTINCT CASE WHEN action = 'closed' AND pr_merged = true THEN pr_or_issue_id ELSE NULL END) AS merged_prs FROM github_events ge WHERE type = 'PullRequestEvent'   AND action IN ('closed', 'opened')   AND event_year = YEAR(NOW()) GROUP BY event_day ORDER BY event_day;
SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'HTML' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` >= '2023-11-01' AND `ge`.`created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date`;
WITH repos_with_prs_24h AS (     SELECT         /*+ READ_FROM_STORAGE(tiflash[ge]) */         ge.repo_id,         COUNT(DISTINCT IF(action = 'opened', ge.pr_or_issue_id, NULL))                          AS opened_prs,         COUNT(DISTINCT IF(action = 'closed' AND ge.pr_merged = false, ge.pr_or_issue_id, NULL)) AS closed_prs,         COUNT(DISTINCT IF(action = 'closed' AND ge.pr_merged = true, ge.pr_or_issue_id, NULL))  AS merged_prs,         COUNT(*)                                                                                AS total_pr_events,         COUNT(DISTINCT actor_id)                                                                AS developers     FROM         github_events ge     WHERE         ge.type = 'PullRequestEvent'         AND (ge.action = 'opened' OR ge.action = 'closed')         AND ge.additions > 10         AND ge.created_at > DATE_SUB(NOW(), INTERVAL 1 DAY)         AND ge.repo_name NOT IN(             'NixOS/nixpkgs',             'firstcontributions/first-contributions',             'Homebrew/homebrew-cask',             'microsoft/winget-pkgs',             'microsoft/vcpkg'         )         AND ge.actor_login NOT IN(             'robodoo',             'r-ryantm',             'scala-steward'         )         AND LOWER(ge.actor_login) NOT REGEXP '^(bot-.+|.+bot|.+\\[bot\\]|.*-bot-.*|robot-.+|.+-ci-.+|.+-ci|.+-testing|.*clabot.*|.+-gerrit|k8s-.+|.+-machine|.+-automation|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.*teamcity.*|jenkins-.+|.+-jira-.+|witness.+|.+witness|signcla.+|.+signcla|.+-cicd-.+|.*autotester.*)$'     GROUP BY         ge.repo_id     HAVING developers > 5     ORDER BY total_pr_events DESC     LIMIT 100 ) SELECT     gr.repo_id, gr.repo_name,     developers, total_pr_events,     opened_prs, closed_prs, merged_prs FROM repos_with_prs_24h r JOIN github_repos gr ON r.repo_id = gr.repo_id WHERE gr.stars > 100 ORDER BY total_pr_events DESC LIMIT 5;
SELECT   COUNT(DISTINCT actor_id) AS developers,   COUNT(DISTINCT repo_id) AS repos,   SUM(CASE WHEN action = 'closed' AND pr_merged = true THEN additions ELSE 0 END) AS additions,   SUM(CASE WHEN action = 'closed' AND pr_merged = true THEN deletions ELSE 0 END) AS deletions FROM github_events WHERE type = 'PullRequestEvent'   AND action IN ('closed', 'opened')   AND event_year = YEAR(NOW());
WITH stars AS (     SELECT         repo_id,         created_at,         ROW_NUMBER() OVER (PARTITION BY repo_id, actor_login) AS row_num     FROM github_events     WHERE         type = 'WatchEvent'         AND repo_id IN ('94911145') ), stars_per_month AS (     SELECT         repo_id,         DATE_FORMAT(created_at, '%Y-%m-01') AS t_month,         COUNT(*) AS total     FROM stars     WHERE         row_num = 1     GROUP BY         repo_id, t_month ), acc AS (     SELECT         repo_id,         t_month,         SUM(total) OVER (PARTITION BY repo_id ORDER BY t_month) AS total,         ROW_NUMBER() OVER(PARTITION BY repo_id, t_month) AS row_num     FROM         stars_per_month ) SELECT     repo_id,     t_month AS event_month,     total FROM acc WHERE row_num = 1 ORDER BY t_month ;
WITH developers_with_prs_24h AS (     SELECT         /*+ READ_FROM_STORAGE(tiflash[ge]) */         ge.actor_id,         COUNT(DISTINCT CASE WHEN action = 'opened' THEN ge.pr_or_issue_id END) AS opened_prs,         COUNT(DISTINCT CASE WHEN action = 'closed' AND ge.pr_merged = false THEN ge.pr_or_issue_id END) AS closed_prs,         COUNT(DISTINCT CASE WHEN action = 'closed' AND ge.pr_merged = true THEN ge.pr_or_issue_id END) AS merged_prs,         COUNT(*) AS total_pr_events     FROM         github_events ge     WHERE         ge.type = 'PullRequestEvent'         AND (ge.action = 'opened' OR ge.action = 'closed')         AND ge.created_at > DATE_SUB(NOW(), INTERVAL 1 DAY)         AND ge.actor_login NOT IN (SELECT login FROM blacklist_users)         AND ge.actor_login NOT REGEXP '^(bot-.+|.+bot|.+\\[bot\\]|.+-bot-.+|robot-.+|.+-ci-.+|.+-ci|.+-testing|.+clabot.+|.+-gerrit|k8s-.+|.+-machine|.+-automation|.+-sdk|.+-integration|github-.+|.+-github|.+-service|.+-builds|codecov-.+|.+teamcity.+|jenkins-.+|.+-jira-.+|witness.+|.+witness|signcla.+|.+signcla|.+-cicd-.+|.+autotester.+)$'         AND ge.additions > 10     GROUP BY         ge.actor_id     ORDER BY total_pr_events DESC ) SELECT     gu.id AS actor_id,     gu.login AS actor_login,     d.total_pr_events,     d.opened_prs,     d.closed_prs,     d.merged_prs FROM developers_with_prs_24h d JOIN github_users gu ON gu.id = d.actor_id WHERE     gu.followers > 5 ORDER BY total_pr_events DESC LIMIT 5;
SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'PushEvent' AND `gr`.`primary_language` = 'Python' AND `ge`.`created_at` >= '2023-11-01' AND `ge`.`created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
SELECT  ge.repo_name AS `github_name`,  COUNT(DISTINCT ge.creator_user_id) AS `contributors` FROM github_events ge WHERE ge.`type` = 'PullRequestEvent' AND ge.`pr_merged` = 1 AND ge.repo_name = 'webiny/webiny-js' GROUP BY ge.repo_name;
WITH RECURSIVE seq(idx, current_period_day, last_period_day) AS (       SELECT         1 AS idx,         CURRENT_DATE() AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL 28 day) AS last_period_day       UNION ALL       SELECT         idx + 1 AS idx,         DATE_SUB(CURRENT_DATE(), INTERVAL idx day) AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL idx + 28 day) AS last_period_day       FROM seq       WHERE idx < 28 ), group_by_day AS (     SELECT         day_offset % 28 + 1 AS idx,         day_offset DIV 28 AS period,         day,         contributors     FROM (         SELECT             (DATEDIFF(CURRENT_DATE(), day)) AS day_offset,             day,             contributors         FROM (             SELECT                 DATE_FORMAT(created_at, '%Y-%m-%d') AS day,                 COUNT(DISTINCT actor_id) AS contributors             FROM                 github_events ge             WHERE                 repo_id = 41986369                 AND (                     (type = 'PullRequestEvent' AND action = 'opened') OR                     (type = 'IssuesEvent' AND action = 'opened') OR                     (type = 'IssueCommentEvent' AND action = 'created') OR                     (type = 'PullRequestReviewEvent' AND action = 'created') OR                     (type = 'PullRequestReviewCommentEvent' AND action = 'created') OR                     (type = 'PushEvent' AND action = '')                 )                 AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)             GROUP BY day             ORDER BY day         ) sub     ) sub2 ), group_by_period AS (     SELECT         (DATEDIFF(CURRENT_DATE(), created_at)) DIV 28 AS period,         COUNT(DISTINCT actor_id) AS contributors     FROM         github_events ge     WHERE         repo_id = 41986369         AND (             (type = 'PullRequestEvent' AND action = 'opened') OR             (type = 'IssuesEvent' AND action = 'opened') OR             (type = 'IssueCommentEvent' AND action = 'created') OR             (type = 'PullRequestReviewEvent' AND action = 'created') OR             (type = 'PullRequestReviewCommentEvent' AND action = 'created') OR             (type = 'PushEvent' AND action = '')         )         AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)     GROUP BY period     ORDER BY period ), last_28_days AS (     SELECT idx, day, contributors     FROM group_by_day     WHERE period = 0 ), last_2nd_28_days AS (     SELECT idx, day, contributors     FROM group_by_day     WHERE period = 1 ), last_28_days_total AS (     SELECT contributors AS total FROM group_by_period WHERE period = 0 ), last_2nd_28_days_total AS (     SELECT contributors AS total FROM group_by_period WHERE period = 1 ) SELECT     s.idx AS idx,     s.current_period_day AS current_period_day,     IFNULL(cp.contributors, 0) AS current_period_day_contributors,     IFNULL(cpt.total, 0) AS current_period_contributors,     s.last_period_day AS last_period_day,     IFNULL(lp.contributors, 0) AS last_period_day_contributors,     IFNULL(lpt.total, 0) AS last_period_contributors FROM seq s LEFT JOIN last_28_days cp ON s.idx = cp.idx LEFT JOIN last_2nd_28_days lp ON s.idx = lp.idx JOIN last_28_days_total cpt JOIN last_2nd_28_days_total lpt ORDER BY idx ;
select id, task_key, type, dispatcher_id, state, start_time, state_update_time, meta, concurrency, step, error from mysql.tidb_global_task where state in ('running','reverting');
/* questionId: a6e0e9ba-e996-440a-a98c-71a60b72f490 */ SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'c' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'HTML' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` >= '2023-11-01' AND `ge`.`created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
SELECT repo_name, stars FROM github_repos WHERE owner_login IN (SELECT login FROM github_users WHERE country_code = 'CN') ORDER BY stars DESC LIMIT 10;
SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `push_count` FROM `github_events` AS `ge` JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'HTML' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date`;
SELECT DATE_FORMAT(ge.created_at, '%Y-%m-%d') AS t_day, COUNT(*) AS commits FROM github_events AS ge INNER JOIN github_repos AS gr ON ge.repo_id = gr.repo_id WHERE gr.primary_language = 'C#' AND ge.created_at >= '2023-11-01' AND ge.created_at <= '2023-12-31' GROUP BY t_day ORDER BY t_day ASC;
SELECT DATE(`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` WHERE `type` = 'PushEvent' AND `repo_id` IN (SELECT `repo_id` FROM `github_repos` WHERE `primary_language` = 'C++') AND `created_at` >= '2023-11-01' AND `created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date`;
SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `num_push_events` FROM `github_events` AS `ge` JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'PushEvent' AND `gr`.`primary_language` = 'C#' AND `ge`.`created_at` >= '2023-11-01' AND `ge`.`created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date`;
SELECT gr.primary_language, COUNT(*) AS commit_count FROM github_repos AS gr JOIN github_events AS ge ON gr.repo_id = ge.repo_id WHERE gr.primary_language IN ('C', 'C_Plus', 'C_Sharp', 'Go', 'HTML', 'Java', 'JavaScript', 'PHP', 'Python', 'Rust', 'Shell', 'SQLanguage', 'TypeScript', 'Vue') AND ge.created_at BETWEEN '2023-11-01 00:00:00' AND '2023-12-31 23:59:59' AND ge.type = 'PushEvent' GROUP BY gr.primary_language;
WITH RECURSIVE seq(idx, current_period_day, last_period_day) AS (       SELECT         1 AS idx,         CURRENT_DATE() AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL 28 day) AS last_period_day       UNION ALL       SELECT         idx + 1 AS idx,         DATE_SUB(CURRENT_DATE(), INTERVAL idx day) AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL idx + 28 day) AS last_period_day       FROM seq       WHERE idx < 28 ), group_by_day AS (     SELECT         day_offset % 28 + 1 AS idx,         day_offset DIV 28 AS period,         day,         stars     FROM (         SELECT             (DATEDIFF(CURRENT_DATE(), day)) AS day_offset,             day,             stars         FROM (             SELECT                 DATE_FORMAT(created_at, '%Y-%m-%d') AS day,                 COUNT(*) AS stars             FROM                 github_events ge             WHERE                 type = 'WatchEvent'                 AND repo_id = 88011908                 AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)             GROUP BY day             ORDER BY day         ) sub     ) sub2 ), last_28_days AS (     SELECT idx, day, stars     FROM group_by_day     WHERE period = 0 ), last_2nd_28_days AS (     SELECT idx, day, stars     FROM group_by_day     WHERE period = 1 ), last_28_days_total AS (     SELECT SUM(stars) AS total FROM last_28_days ), last_2nd_28_days_total AS (     SELECT SUM(stars) AS total FROM last_2nd_28_days ) SELECT     s.idx AS idx,     s.current_period_day AS current_period_day,     IFNULL(cp.stars, 0) AS current_period_day_stars,     IFNULL(cpt.total, 0) AS current_period_stars,     s.last_period_day AS last_period_day,     IFNULL(lp.stars, 0) AS last_period_day_stars,     IFNULL(lpt.total, 0) AS last_period_stars FROM seq s LEFT JOIN last_28_days cp ON s.idx = cp.idx LEFT JOIN last_2nd_28_days lp ON s.idx = lp.idx JOIN last_28_days_total cpt ON 1 = 1 JOIN last_2nd_28_days_total lpt ON 1 = 1 ORDER BY idx ;
WITH stars AS (     SELECT         943149 AS repo_id, IFNULL(COUNT(DISTINCT actor_login), 0) AS total     FROM github_events     WHERE         type = 'WatchEvent'         AND repo_id = 943149         AND action = 'started' ), commits AS (     SELECT         943149 AS repo_id, IFNULL(SUM(push_distinct_size), 0) AS total     FROM github_events     WHERE         type = 'PushEvent'         AND repo_id = 943149 ), issues AS (     SELECT         943149 AS repo_id, IFNULL(COUNT(DISTINCT number), 0) AS total     FROM github_events     WHERE         type = 'IssuesEvent'         AND repo_id = 943149 ), pull_request_creators AS (     SELECT         943149 AS repo_id, IFNULL(COUNT(DISTINCT actor_login), 0) AS total     FROM github_events     WHERE         type = 'PullRequestEvent'         AND repo_id = 943149         AND action = 'opened' ) SELECT     943149 AS repo_id,     s.total AS stars,     c.total AS commits,     i.total AS issues,     prc.total AS pull_request_creators FROM (     SELECT 943149 AS repo_id ) sub LEFT JOIN stars s ON sub.repo_id = s.repo_id LEFT JOIN commits c ON sub.repo_id = c.repo_id LEFT JOIN issues i ON sub.repo_id = i.repo_id LEFT JOIN pull_request_creators prc ON sub.repo_id = prc.repo_id ;
SELECT     /*+ MAX_EXECUTION_TIME(15000) */     COUNT(1) AS cnt,     MAX(created_at) AS latest_created_at,     UNIX_TIMESTAMP(MAX(created_at)) AS latest_timestamp FROM github_events WHERE     created_at BETWEEN (         UTC_TIMESTAMP - INTERVAL 6 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 6 MINUTE) % 5 SECOND     ) AND (         UTC_TIMESTAMP - INTERVAL 5 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 5 MINUTE) % 5 SECOND     ) GROUP BY (    ( UNIX_TIMESTAMP(created_at) - UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 6 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 6 MINUTE) % 5 SECOND) ) -    ( UNIX_TIMESTAMP(created_at) - UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 5 MINUTE - INTERVAL UNIX_TIMESTAMP(UTC_TIMESTAMP - INTERVAL 5 MINUTE) % 5 SECOND) ) %     5 ) ORDER BY latest_timestamp ;
/* questionId: 78bd6701-3846-43ad-abfa-f6634a9b761f */ SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'HTML' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date`;
SELECT DATE(github_repos.pushed_at) AS date, COUNT(*) AS commit_count FROM github_repos WHERE github_repos.primary_language = 'Rust' AND github_repos.pushed_at >= '2023-11-01' AND github_repos.pushed_at <= '2023-12-31' GROUP BY DATE(github_repos.pushed_at);
/* questionId: e9e572e6-20b9-45c5-adfb-bb12a8597654 */ SELECT DATE(`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` WHERE `type` = 'PushEvent' AND `created_at` BETWEEN '2023-11-01' AND '2023-12-31' AND `repo_id` IN (SELECT `repo_id` FROM `github_repos` WHERE `primary_language` = 'Kotlin') GROUP BY `date` ORDER BY `date` ASC;
SELECT actor_login,        COUNT(*) AS events FROM github_events ge WHERE repo_id = 41986369   AND (         (type = 'PullRequestEvent' AND action = 'opened') OR         (type = 'IssuesEvent' AND action = 'opened') OR         (type = 'IssueCommentEvent' AND action = 'created') OR         (type = 'PullRequestReviewEvent' AND action = 'created') OR         (type = 'PullRequestReviewCommentEvent' AND action = 'created') OR         (type = 'PushEvent' AND action = '')     )   AND actor_login NOT LIKE '%bot'   AND actor_login NOT LIKE '%[bot]'   AND actor_login NOT IN (SELECT login FROM blacklist_users bu) GROUP BY actor_login ORDER BY events DESC LIMIT 200;
select job_meta, processing from mysql.tidb_ddl_job where job_id in (select min(job_id) from mysql.tidb_ddl_job group by schema_ids, table_ids, processing) and not reorg  order by processing desc, job_id;
select id, task_key, type, dispatcher_id, state, start_time, state_update_time, meta, concurrency, step, error from mysql.tidb_global_task where state in ('reverting');
WITH RECURSIVE seq(idx, current_period_day, last_period_day) AS (       SELECT         1 AS idx,         CURRENT_DATE() AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL 28 day) AS last_period_day       UNION ALL       SELECT         idx + 1 AS idx,         DATE_SUB(CURRENT_DATE(), INTERVAL idx day) AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL idx + 28 day) AS last_period_day       FROM seq       WHERE idx < 28 ), group_by_day AS (     SELECT         day_offset % 28 + 1 AS idx,         day_offset DIV 28 AS period,         day,         commits     FROM (         SELECT             (DATEDIFF(CURRENT_DATE(), day)) AS day_offset,             day,             commits         FROM (             SELECT                 DATE_FORMAT(created_at, '%Y-%m-%d') AS day,                 SUM(push_distinct_size) AS commits             FROM                 github_events ge             WHERE                 type = 'PushEvent'                 AND repo_id = 88011908                 AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)             GROUP BY day             ORDER BY day         ) sub     ) sub2 ), last_28_days AS (     SELECT idx, day, commits     FROM group_by_day     WHERE period = 0 ), last_2nd_28_days AS (     SELECT idx, day, commits     FROM group_by_day     WHERE period = 1 ), last_28_days_total AS (     SELECT SUM(commits) AS total FROM last_28_days ), last_2nd_28_days_total AS (     SELECT SUM(commits) AS total FROM last_2nd_28_days ) SELECT     s.idx AS idx,     s.current_period_day AS current_period_day,     IFNULL(cp.commits, 0) AS current_period_day_commits,     IFNULL(cpt.total, 0) AS current_period_commits,     s.last_period_day AS last_period_day,     IFNULL(lp.commits, 0) AS last_period_day_commits,     IFNULL(lpt.total, 0) AS last_period_commits FROM seq s LEFT JOIN last_28_days cp ON s.idx = cp.idx LEFT JOIN last_2nd_28_days lp ON s.idx = lp.idx JOIN last_28_days_total cpt ON 1 = 1 JOIN last_2nd_28_days_total lpt ON 1 = 1 ORDER BY idx ;
WITH issues AS (     SELECT         74175805 AS repo_id, COUNT(*) AS total     FROM github_events     WHERE         repo_id = 74175805         AND type = 'IssuesEvent'         AND action = 'opened' ), issue_creators AS (     SELECT         74175805 AS repo_id, COUNT(DISTINCT actor_login) AS total     FROM github_events     WHERE         repo_id = 74175805         AND type = 'IssuesEvent'         AND action = 'opened' ), issue_comments AS (     SELECT         74175805 AS repo_id, COUNT(*) AS total     FROM github_events     WHERE         repo_id = 74175805         AND type = 'IssueCommentEvent'         AND action = 'created' ), issue_commenters AS (     SELECT         74175805 AS repo_id, COUNT(DISTINCT actor_login) AS total     FROM github_events     WHERE         repo_id = 74175805         AND type = 'IssueCommentEvent'         AND action = 'created' ) SELECT     74175805 AS repo_id,     IFNULL(i.total, 0) AS issues,     IFNULL(ic.total, 0) AS issue_creators,     IFNULL(ico.total, 0) AS issue_comments,     IFNULL(icc.total, 0) AS issue_commenters FROM (     SELECT 74175805 AS repo_id ) sub LEFT JOIN issues i ON sub.repo_id = i.repo_id LEFT JOIN issue_creators ic ON sub.repo_id = ic.repo_id LEFT JOIN issue_comments ico ON sub.repo_id = ico.repo_id LEFT JOIN issue_commenters icc ON sub.repo_id = icc.repo_id ;
/* questionId: 953d041d-7b65-42b3-8f0e-01581fcbc675 */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `ge`.`action` = 'started' AND YEAR(`ge`.`created_at`) = YEAR(CURRENT_DATE) - 1 AND LOWER(`gr`.`primary_language`) LIKE LOWER('%javascript%') GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 20;
/* questionId: 7bde8cb1-0fc8-4c73-ab02-f43c92a5e639 */ SELECT gu.organization AS company, COUNT(*) AS pull_request_count FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'opened' AND ge.created_at > DATE_SUB(NOW(), INTERVAL 1 MONTH) AND gu.organization IS NOT NULL GROUP BY gu.organization ORDER BY pull_request_count DESC LIMIT 20;
/* questionId: ef7673d3-f82b-44c7-8362-16b0f5e13104 */ SELECT DATE_FORMAT(ge.created_at, '%Y-%m-%d') AS date, COUNT(*) AS submission_count FROM github_events AS ge JOIN github_repos AS gr ON ge.repo_id = gr.repo_id WHERE gr.primary_language = 'Ruby' AND ge.created_at >= '2023-11-01' AND ge.created_at <= '2023-12-31' GROUP BY date ORDER BY date;
/* questionId: 4b628a6b-9de2-442c-8d94-b9dd70db4bd7 */ SELECT DISTINCT gu.login AS user_login, gu.country_code FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.repo_name = 'apache/flink' AND gu.country_code = 'IL';
/* questionId: 4938968d-7d71-4021-ae7f-03410f09c523 */ SELECT gu.login AS user_login, COUNT(*) AS contributions FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.repo_name = 'apache/flink' AND gu.country_code = 'IL' GROUP BY user_login;
/* questionId: 80ecb6fb-c492-4d1e-996f-2f0ebdf4f5d9 */ SELECT `gr`.`repo_name`, COUNT(*) AS `stars` FROM `github_repos` AS `gr` LEFT JOIN `github_users` AS `gu` ON `gr`.`owner_id` = `gu`.`id` WHERE `gu`.`country_code` = 'CN' GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 10;
/* questionId: f7a70ce9-0709-46f3-aec9-f313c662aecd */ SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'PushEvent' AND `gr`.`primary_language` = 'Python' AND `ge`.`created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
/* questionId: 9f9757c9-c138-4d5b-8a93-84db6ea7fcf1 */ SELECT DATE(`ge`.`created_at`) AS `date`, COUNT(*) AS `push_count` FROM `github_events` AS `ge` JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'PushEvent' AND `gr`.`primary_language` = 'HTML' AND `ge`.`created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
/* questionId: ab5e6742-aaba-43c6-9161-4573bf6d7b81 */ SELECT `actor_login` AS `user_login`, COUNT(*) AS `events_count` FROM `github_events` WHERE `type` IN ('PullRequestEvent', 'PushEvent', 'IssueCommentEvent', 'IssuesEvent', 'PullRequestReviewCommentEvent', 'WatchEvent', 'CreateEvent', 'DeleteEvent', 'ForkEvent', 'ReleaseEvent') AND `actor_login` NOT LIKE '%bot%' GROUP BY `actor_login` ORDER BY `events_count` DESC LIMIT 10;
/* questionId: ae334c6b-0b2f-4f3c-b4b3-8e83f394ae92 */ SELECT COUNT(*) AS `repositories_count` FROM `github_repos` WHERE LOWER(`repo_name`) LIKE '%autogen%';
SELECT `gr`.`repo_name`, COUNT(*) AS `stars` FROM `github_repos` AS `gr` WHERE `gr`.`description` LIKE '%AI%' AND `gr`.`created_at` > DATE_SUB(NOW(), INTERVAL 30 DAY) GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 10;
/* questionId: e4871274-6108-48ff-9b8a-34383b2d0961 */ SELECT gu.organization AS organization, COUNT(*) AS push_requests FROM github_events AS ge JOIN github_users AS gu ON ge.actor_id = gu.id WHERE ge.type = 'PushEvent' AND ge.created_at > DATE_SUB(NOW(), INTERVAL 3 MONTH) AND gu.type = 'ORG' GROUP BY organization ORDER BY push_requests DESC LIMIT 20;
/* questionId: 420f565e-879c-4bf8-8db3-5e53500a0cfe */ SELECT `gu`.`login` AS `user_login`, COUNT(DISTINCT `ge`.`number`) AS `pr_count`, COUNT(DISTINCT `ge2`.`number`) AS `issue_count` FROM `github_events` AS `ge` INNER JOIN `github_events` AS `ge2` ON `ge`.`actor_id` = `ge2`.`actor_id` INNER JOIN `github_users` AS `gu` ON `ge`.`actor_id` = `gu`.`id` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`owner_login` = 'vesoft-inc' AND `ge`.`type` = 'PullRequestEvent' AND `ge2`.`type` = 'IssuesEvent' AND `ge`.`action` = 'opened' AND `ge2`.`action` = 'opened' GROUP BY `gu`.`login` ORDER BY `pr_count` DESC;
/* questionId: c5d9e4e8-9aca-463c-92c1-4d959b33090c */ SELECT COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'C' AND `ge`.`type` = 'PushEvent' AND `ge`.`created_at` BETWEEN '2023-11-01 00:00:00' AND '2023-12-31 23:59:59';
/* questionId: 88d8dee6-7fbb-415f-9e2a-9d47f4b47738 */ SELECT `gr`.`repo_name`, SUM(`ge`.`additions` + `ge`.`deletions`) AS `lines_of_code` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `gr`.`primary_language` = 'C++' AND `ge`.`type` = 'PullRequestEvent' AND `ge`.`action` = 'closed' GROUP BY `gr`.`repo_name` ORDER BY `lines_of_code` DESC LIMIT 10;
/* questionId: aaec0c5d-b23e-4e5f-ae31-596cc3a8ffb7 */ SELECT SUM(additions) AS total_rust_lines FROM github_events WHERE type = 'PullRequestEvent' AND action = 'opened' AND pr_or_issue_created_at > '1970-01-01 00:00:00' AND repo_id IN (SELECT repo_id FROM github_repos WHERE primary_language = 'Rust');
/* questionId: cf6c1f09-9a38-490c-9d80-a4c4689091e2 */ SELECT DISTINCT gr.repo_name FROM github_events ge INNER JOIN github_repos gr ON ge.repo_id = gr.repo_id INNER JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.closed_at > DATE_SUB(NOW(), INTERVAL 5 DAY);
/* questionId: ffca20f5-f80c-435e-a4a9-a760b91e53f1 */ SELECT gr.repo_name, COUNT(*) AS pr_count FROM github_events ge INNER JOIN github_repos gr ON ge.repo_id = gr.repo_id INNER JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.closed_at BETWEEN '2024-01-12 00:00:00' AND '2024-01-14 23:59:59' GROUP BY gr.repo_name ORDER BY pr_count DESC LIMIT 5;
WITH `contributors` AS (SELECT `actor_login`, COUNT(DISTINCT `pr_or_issue_id`) AS `num_contributions` FROM `github_events` WHERE `repo_id` = 507775 AND `actor_login` NOT LIKE '%bot%' AND `actor_login` IN (SELECT DISTINCT `actor_login` FROM `github_events` WHERE `repo_id` = 507775 AND `type` = 'PullRequestEvent' AND `action` = 'opened') GROUP BY `actor_login`) SELECT `actor_login`, `num_contributions` FROM `contributors` ORDER BY `num_contributions` DESC LIMIT 10;
SELECT DATE_FORMAT(created_at, '%Y-%m-%d') AS date, COUNT(*) AS submission_count FROM github_repos WHERE primary_language = 'Ruby' AND created_at >= '2023-11-01' AND created_at <= '2023-12-31' GROUP BY date;
/* questionId: d12408ad-2f5a-4ec7-b2b3-2f7fbf23aee8 */ SELECT DATE(`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` WHERE `type` = 'PushEvent' AND `repo_id` IN (SELECT `repo_id` FROM `github_repos` WHERE `primary_language` = 'TypeScript') AND `created_at` >= '2023-11-01' AND `created_at` <= '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
/* questionId: 4a800e14-4081-4c3b-a35f-d205566a168d */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `ge`.`action` = 'started' AND YEAR(`ge`.`created_at`) = YEAR(CURRENT_DATE()) - 1 AND `gr`.`primary_language` = 'TypeScript' GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 20;
select HIGH_PRIORITY table_id, is_index, hist_id, count, repeats, lower_bound, upper_bound, ndv from mysql.stats_buckets order by table_id, is_index, hist_id, bucket_id;
/* questionId: 56f4f175-d741-4c35-b219-b6521a5d179f */ SELECT `ge`.`actor_login` AS `developer`, SUM(`ge`.`additions` + `ge`.`deletions`) AS `code_lines` FROM `github_events` AS `ge` WHERE `ge`.`type` = 'PullRequestEvent' AND `ge`.`action` = 'opened' AND `ge`.`actor_login` NOT LIKE '%bot%' AND `ge`.`repo_id` IN (SELECT `repo_id` FROM `github_repos` WHERE `primary_language` = 'C') GROUP BY `ge`.`actor_login` ORDER BY `code_lines` DESC LIMIT 20;
SELECT     c.id, ANY_VALUE(c.name) AS name FROM     collection_items ci JOIN collections c ON ci.collection_id = c.id WHERE     ci.repo_id = 88011908 GROUP BY c.id;
SELECT version, table_id, modify_count, count from mysql.stats_meta where version > 447016855082631176 order by version;
/* questionId: 86aa74e6-5fc2-4b9d-b081-06591dd59297 */ SELECT `gr`.`primary_language`, COUNT(*) AS `commit_count` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE (`gr`.`primary_language` = 'JavaScript' OR `gr`.`primary_language` = 'C') AND DATE(`ge`.`created_at`) = CURDATE() - INTERVAL 1 DAY GROUP BY `gr`.`primary_language`;
WITH contributions AS (     SELECT         type,         repo_id,         FIRST_VALUE(repo_name) OVER (PARTITION BY repo_id ORDER BY created_at DESC) AS repo_name     FROM github_events ge     WHERE         actor_id = 923947         AND (             (type = 'PullRequestEvent' AND action = 'opened') OR             (type = 'IssuesEvent' AND action = 'opened') OR             (type = 'IssueCommentEvent' AND action = 'created') OR             (type = 'PullRequestReviewEvent' AND action = 'created') OR             (type = 'PullRequestReviewCommentEvent' AND action = 'created') OR             (type = 'PushEvent' AND action = '')         )          ) SELECT     repo_id,     repo_name,     CASE type         WHEN 'IssuesEvent' THEN 'issues'         WHEN 'IssueCommentEvent' THEN 'issue_comments'         WHEN 'PullRequestEvent' THEN 'pull_requests'         WHEN 'PullRequestReviewEvent' THEN 'reviews'         WHEN 'PullRequestReviewCommentEvent' THEN 'review_comments'         WHEN 'PushEvent' THEN 'pushes'     END AS type,     COUNT(1) AS cnt  FROM contributions c GROUP BY repo_id, type ORDER BY repo_id, type  ;
SELECT original_sql, bind_sql, default_db, status, create_time, update_time, charset, collation, source, sql_digest, plan_digest  FROM mysql.bind_info WHERE update_time > '2023-09-14 08:34:27.242' ORDER BY update_time, create_time;
WITH stars_per_company AS (     SELECT         IF(             gu.organization_formatted IS NOT NULL AND LENGTH(gu.organization_formatted) != 0,             gu.organization_formatted,             'Unknown'         ) AS company_name,         COUNT(DISTINCT ge.actor_login) AS stargazers     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         ge.repo_id IN (507775,60246359,17165658,41986369,16563587,6838921,108110,166515022,48833910,156018,50229487,20089857,5349565,6934395,6358188,11008207,19961085,206444,30753733,105944401,31006158,99919302,50874442,84240850,28738447,44781140,372536760,13124802,146459443,28449431,23418517,206417,9342529,19257422,196353673,172104891,402945349,11225014,2649214,41349039,114187903,20587599,19816070,69400326,927442,24494032)         AND ge.type = 'WatchEvent'         AND ge.action = 'started'     GROUP BY company_name ), stars_total AS (     SELECT SUM(stargazers) AS total FROM stars_per_company ) SELECT     spc.company_name,     spc.stargazers,     spc.stargazers / st.total AS proportion FROM stars_per_company spc, stars_total st WHERE spc.company_name != 'Unknown' ORDER BY spc.stargazers DESC LIMIT 50;
/* questionId: 1c6f7d0a-c5d7-4ac2-8c5a-db21b020162c */ SELECT COUNT(*) AS `count` FROM `github_repos` WHERE `repo_name` LIKE '%autogen%';
select variable_name, variable_value from mysql.global_variables where variable_name in ('tidb_auto_analyze_ratio', 'tidb_auto_analyze_start_time', 'tidb_auto_analyze_end_time');
WITH group_by_area AS (     SELECT         gu.country_code AS country_or_area,         COUNT(1) as cnt     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         repo_id IN (507775, 60246359, 17165658, 41986369, 16563587, 6838921, 108110, 166515022, 48833910, 156018, 50229487, 20089857, 5349565, 6934395, 6358188, 11008207, 19961085, 206444, 30753733, 105944401, 31006158, 99919302, 50874442, 84240850, 28738447, 44781140, 372536760, 13124802, 146459443, 28449431, 23418517, 206417, 9342529, 19257422, 196353673, 172104891, 402945349, 11225014, 2649214, 41349039, 114187903, 20587599, 19816070, 69400326, 927442, 24494032)         AND ge.type = 'WatchEvent'         AND ge.action = 'started'                  AND gu.country_code NOT IN ('', 'N/A', 'UND')     GROUP BY country_or_area ), summary AS (     SELECT SUM(cnt) AS total FROM group_by_area ) SELECT      country_or_area,     cnt AS count,     cnt / summary.total AS percentage FROM group_by_area, summary ORDER BY cnt DESC ;
/* questionId: 1626af0b-96fe-4e47-afcf-463bfc58ea02 */ SELECT gu.country_code, COUNT(*) AS pr_count FROM github_events AS ge INNER JOIN github_users AS gu ON ge.actor_id = gu.id WHERE gu.country_code NOT IN ('', 'N/A', 'UND') AND DATE(ge.created_at) = CURDATE() GROUP BY gu.country_code ORDER BY pr_count DESC LIMIT 10;
select HIGH_PRIORITY table_id, is_index, hist_id, distinct_count, version, null_count, cm_sketch, tot_col_size, stats_ver, correlation, flag, last_analyze_pos from mysql.stats_histograms;
/* questionId: d22a980a-f73f-4f92-8905-8cff83abd57b */ SELECT gr.primary_language, COUNT(ge.id) AS commit_count FROM github_repos gr JOIN github_events ge ON gr.repo_id = ge.repo_id WHERE ge.type = 'PushEvent' AND gr.primary_language IN ('C', 'C_Plus', 'C_Sharp', 'CSS', 'Dart', 'Go', 'HTML', 'Java', 'JavaScript', 'Kotlin', 'PHP', 'Python', 'Ruby', 'Rust', 'Shell', 'SQLanguage', 'Swift', 'TypeScript', 'Vue', 'JSON') AND ge.created_at BETWEEN '2023-11-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY gr.primary_language ORDER BY commit_count DESC;
/* questionId: 26fb0d56-d51b-4d82-9601-4bf2d5d1c914 */ SELECT `gr`.`repo_name`, `gr`.`stars` FROM `github_repos` AS `gr` WHERE LOWER(`gr`.`description`) LIKE LOWER('%HDSW%') AND LOWER(`gr`.`description`) LIKE LOWER('%vector%') AND LOWER(`gr`.`description`) LIKE LOWER('%storage%') AND LOWER(`gr`.`description`) LIKE LOWER('%engine%') OR LOWER(`gr`.`description`) LIKE LOWER('%library%') ORDER BY `gr`.`stars` DESC LIMIT 10;
/* questionId: 92ecffb5-59e6-4630-9ea9-18742b295496 */ SELECT gu.organization AS organization, COUNT(*) AS pull_request_count FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.created_at > DATE_SUB(NOW(), INTERVAL 1 WEEK) AND gu.type = 'ORG' GROUP BY gu.organization ORDER BY pull_request_count DESC LIMIT 20;
/* questionId: cc5ba7b5-6926-4911-af27-e9c3847566c5 */ SELECT `repo_name`, `stars`, `forks` FROM `github_repos` ORDER BY `stars` DESC, `forks` DESC LIMIT 10;
/* questionId: 9b41fa72-5268-46da-8d22-1d79ac43510e */ SELECT gu.country_code, COUNT(*) AS num_developers FROM github_events AS ge INNER JOIN github_users AS gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' GROUP BY gu.country_code ORDER BY num_developers DESC LIMIT 5;
SELECT     repo_id,     ANY_VALUE(repo_name) AS repo_name,     COUNT(id) AS cnt,     DATE_FORMAT(created_at, '%Y-%m-%d 00:00:00') AS event_period FROM github_events ge WHERE     actor_id = 9993594     AND ((type = 'PullRequestEvent' AND action = 'opened') OR (type = 'IssuesEvent' AND action = 'opened') OR (type = 'IssueCommentEvent' AND action = 'created') OR (type = 'PullRequestReviewEvent' AND action = 'created') OR (type = 'PullRequestReviewCommentEvent' AND action = 'created') OR (type = 'PushEvent' AND action = ''))     AND (created_at BETWEEN DATE_SUB(NOW(), INTERVAL 28 DAY) AND NOW()) GROUP BY repo_id, event_period ORDER BY repo_id, event_period DESC;
/* questionId: ea408f94-7b8e-47ad-91a2-17deaef88be3 */ SELECT COUNT(DISTINCT gr.repo_name) AS unique_repos_count FROM github_events ge INNER JOIN github_repos gr ON ge.repo_id = gr.repo_id INNER JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.closed_at > DATE_SUB(CURDATE(), INTERVAL 3 DAY);
/* questionId: 01bc5fa5-fb2e-4d73-8b28-cedfa356bd85 */ SELECT DISTINCT gr.repo_name FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.closed_at > DATE_SUB(CURDATE(), INTERVAL 4 DAY);
/* questionId: 60979eec-bd85-4f86-89ac-722cab308e14 */ SELECT gu.organization AS company, COUNT(*) AS pull_request_count FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'opened' AND gu.type = 'ORG' GROUP BY gu.organization ORDER BY pull_request_count DESC LIMIT 20;
/* questionId: e87751e0-40a1-4fed-9298-11fc854d6c90 */ SELECT gr.repo_name, COUNT(*) AS pr_count FROM github_events ge INNER JOIN github_repos gr ON ge.repo_id = gr.repo_id INNER JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.closed_at >= '2024-01-11 00:00:00' AND ge.closed_at <= '2024-01-14 23:59:59' GROUP BY gr.repo_name;
select job_meta, processing from mysql.tidb_ddl_job where job_id in (select min(job_id) from mysql.tidb_ddl_job group by schema_ids, table_ids, processing) and  reorg  order by processing desc, job_id;
/* questionId: 4150d1a3-edd9-4bb0-b7cb-6945f0dc23d4 */ SELECT repo_name, stars, description, primary_language, license, pushed_at, created_at, updated_at FROM github_repos WHERE LOWER(description) LIKE '%sql%' ORDER BY stars DESC LIMIT 5;
/* questionId: a357a2b9-77ab-4fb3-9183-b2585ec1ea2d */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `gr`.`description` LIKE '%database%' GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 10;
/* questionId: d0329d17-8aba-40a0-8154-0f7ca3aae95d */ SELECT gr.primary_language, COUNT(ge.id) AS commit_count FROM github_repos gr JOIN github_events ge ON gr.repo_id = ge.repo_id WHERE ge.type = 'PushEvent' AND ge.created_at BETWEEN '2023-11-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY gr.primary_language;
/* questionId: a12e98c7-69bf-4115-b558-1db25be82f92 */ SELECT DATE(`created_at`) AS `date`, COUNT(*) AS `operation_count` FROM `github_events` WHERE `created_at` BETWEEN '2023-12-01 00:00:00' AND '2023-12-31 23:59:59' GROUP BY `date` ORDER BY `date` ASC;
/* questionId: b5eb2f6c-8373-409a-bbc3-5c5573bf5ce3 */ SELECT gu.organization AS company, COUNT(*) AS pull_request_count FROM github_events ge JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'opened' AND ge.created_at > DATE_SUB(NOW(), INTERVAL 3 MONTH) AND gu.type = 'ORG' GROUP BY company ORDER BY pull_request_count DESC LIMIT 20;
/* questionId: 48456885-2985-410b-9663-1927e99f4a62 */ SELECT DATE_FORMAT(`created_at`, '%Y-%m-%d') AS `date`, `type` AS `type`, COUNT(*) AS `count` FROM `github_events` WHERE DATE(`created_at`) = CURDATE() - INTERVAL 1 DAY GROUP BY `date`, `type` ORDER BY `date` ASC LIMIT 200;
SELECT     ANY_VALUE(ge.creator_user_id) AS github_id,     ge.creator_user_login AS github_login,     COUNT(*) AS pr_count FROM github_events ge JOIN github_repos gr on ge.repo_id = gr.repo_id WHERE     ge.type = 'PullRequestEvent'     AND ge.action = 'closed'     AND ge.pr_merged = 1     AND gr.owner_login IN ('pingcap', 'tikv', 'chaos-mesh') GROUP BY ge.creator_user_login ORDER BY pr_count DESC;
/* questionId: 33fdae78-2195-4ef0-8f6d-73bd4b909152 */ SELECT repo_name, description, created_at FROM github_repos WHERE description LIKE '%Vercel%' AND description LIKE '%TiDB%' AND MONTH(created_at) = 5;
/* questionId: 463ccbf2-e7b3-47b9-b561-bbe36b2818da */ SELECT gr.repo_name AS repo_name, gr.primary_language, gr.stars FROM github_repos gr WHERE LOWER(gr.description) LIKE LOWER('%database%') ORDER BY gr.stars DESC LIMIT 10;
WITH RECURSIVE seq(idx, current_period_day, last_period_day) AS (       SELECT         1 AS idx,         CURRENT_DATE() AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL 28 day) AS last_period_day       UNION ALL       SELECT         idx + 1 AS idx,         DATE_SUB(CURRENT_DATE(), INTERVAL idx day) AS current_period_day,         DATE_SUB(CURRENT_DATE(), INTERVAL idx + 28 day) AS last_period_day       FROM seq       WHERE idx < 28 ), opened_prs_group_by_day AS (     SELECT         day_offset % 28 + 1 AS idx,         day_offset DIV 28 AS period,         day,         prs     FROM (         SELECT             (DATEDIFF(CURRENT_DATE(), day)) AS day_offset,             day,             prs         FROM (             SELECT                 DATE_FORMAT(created_at, '%Y-%m-%d') AS day,                 COUNT(*) AS prs             FROM                 github_events ge             WHERE                 type = 'PullRequestEvent'                 AND action = 'opened'                 AND repo_id = 88011908                 AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)             GROUP BY day             ORDER BY day         ) sub     ) sub2 ), merged_prs_group_by_day AS (     SELECT         day_offset % 28 + 1 AS idx,         day_offset DIV 28 AS period,         day,         prs     FROM (         SELECT             (DATEDIFF(CURRENT_DATE(), day)) AS day_offset,             day,             prs         FROM (             SELECT                 DATE_FORMAT(created_at, '%Y-%m-%d') AS day,                 COUNT(*) AS prs             FROM                 github_events ge             WHERE                 type = 'PullRequestEvent'                 AND action = 'closed'                 AND pr_merged = true                 AND repo_id = 88011908                 AND created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 56 DAY)             GROUP BY day             ORDER BY day         ) sub     ) sub2 ), opened_prs_last_28_days AS (     SELECT idx, day, prs     FROM opened_prs_group_by_day     WHERE period = 0 ), opened_prs_last_2nd_28_days AS (     SELECT idx, day, prs     FROM opened_prs_group_by_day     WHERE period = 1 ), merged_prs_last_28_days AS (     SELECT idx, day, prs     FROM merged_prs_group_by_day     WHERE period = 0 ), merged_prs_last_2nd_28_days AS (     SELECT idx, day, prs     FROM merged_prs_group_by_day     WHERE period = 1 ), opened_prs_last_28_days_total AS (     SELECT SUM(prs) AS total FROM opened_prs_last_28_days ), opened_prs_last_2nd_28_days_total AS (     SELECT SUM(prs) AS total FROM opened_prs_last_2nd_28_days ), merged_prs_last_28_days_total AS (     SELECT SUM(prs) AS total FROM merged_prs_last_28_days ), merged_prs_last_2nd_28_days_total AS (     SELECT SUM(prs) AS total FROM merged_prs_last_2nd_28_days ) SELECT     s.idx AS idx,     s.current_period_day AS current_period_day,     IFNULL(opcp.prs, 0) AS current_period_opened_day_prs,     IFNULL(opcpt.total, 0) AS current_period_opened_prs,     IFNULL(oplp.prs, 0) AS last_period_opened_day_prs,     IFNULL(oplpt.total, 0) AS last_period_opened_prs,     s.last_period_day AS last_period_day,     IFNULL(mpcp.prs, 0) AS current_period_merged_day_prs,     IFNULL(mpcpt.total, 0) AS current_period_merged_prs,     IFNULL(mplp.prs, 0) AS last_period_merged_day_prs,     IFNULL(mplpt.total, 0) AS last_period_merged_prs FROM seq s LEFT JOIN opened_prs_last_28_days opcp ON s.idx = opcp.idx LEFT JOIN opened_prs_last_2nd_28_days oplp ON s.idx = oplp.idx LEFT JOIN merged_prs_last_28_days mpcp ON s.idx = mpcp.idx LEFT JOIN merged_prs_last_2nd_28_days mplp ON s.idx = mplp.idx JOIN opened_prs_last_28_days_total opcpt ON 1 = 1 JOIN opened_prs_last_2nd_28_days_total oplpt ON 1 = 1 JOIN merged_prs_last_28_days_total mpcpt ON 1 = 1 JOIN merged_prs_last_2nd_28_days_total mplpt ON 1 = 1 ORDER BY idx;
/* questionId: 91595ae7-540b-4838-b44a-b656c6245e68 */ SELECT gr.repo_name AS label, COUNT(*) AS value FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id WHERE gr.description LIKE '%privacy%' AND YEAR(ge.created_at) = 2023 AND ge.type = 'WatchEvent' AND ge.action = 'started' GROUP BY gr.repo_name ORDER BY value DESC LIMIT 5;
/* questionId: 4e2dc2fe-027e-461a-b34e-42f5cfa8b95e */ SELECT gr.repo_name AS repo_name, gr.stars AS stars FROM github_repos gr WHERE LOWER(gr.description) LIKE LOWER('%generative%') AND LOWER(gr.description) LIKE LOWER('%AI%') ORDER BY stars DESC LIMIT 20;
SELECT * FROM `github_events` WHERE `repo_name` = 'pingcap' AND `repo_id` = 41986369 LIMIT 1;
/* questionId: bf81d3a0-995d-46db-95c0-0f2c64175935 */ SELECT repo_name, stars, forks FROM github_repos WHERE LOWER(description) LIKE '%database%' AND created_at > DATE_SUB(NOW(), INTERVAL 1 YEAR) ORDER BY stars DESC, forks DESC LIMIT 10;
/* questionId: e4b8296c-4c3b-462d-b628-13f24365e10f */ SELECT DISTINCT gr.repo_name FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.created_at > DATE_SUB(NOW(), INTERVAL 5 DAY);
/* questionId: 31471eb9-b73b-458b-aa1a-53ae00846e28 */ SELECT DISTINCT gr.repo_name FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.created_at BETWEEN '2023-01-10 00:00:00' AND '2023-01-14 23:59:59';
/* questionId: 47bbd26d-a5b5-4f24-870e-b34878477d1b */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `ge`.`action` = 'started' AND YEAR(`ge`.`created_at`) = YEAR(CURRENT_DATE) - 1 AND LOWER(`gr`.`description`) LIKE LOWER('%node.js%') GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 20;
/* questionId: b3072029-90c2-463e-9790-f38dc7925628 */ SELECT gr.repo_name, COUNT(DISTINCT ge.creator_user_login) AS pr_completed_count FROM github_events ge INNER JOIN github_repos gr ON ge.repo_id = gr.repo_id INNER JOIN github_users gu ON ge.creator_user_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 200 AND ge.created_at >= '2024-01-13 00:00:00' AND ge.created_at < '2024-01-14 00:00:00' GROUP BY gr.repo_name;
/* questionId: 57f3e534-07b1-48db-8129-4c57d2e6fe92 */ SELECT DATE(`created_at`) AS `date`, COUNT(*) AS `commit_count` FROM `github_events` WHERE `repo_name` LIKE '%java%' AND `type` = 'PushEvent' AND `created_at` BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY `date` ORDER BY `date` ASC;
/* questionId: 62dcbe6d-e6db-4758-8196-1af77281e622 */ SELECT SUM(additions + deletions) AS total_lines FROM github_events WHERE type = 'PullRequestEvent' AND repo_id IN (SELECT repo_id FROM github_repos WHERE primary_language = 'Rust');
/* questionId: f974b2a0-6cde-4e61-b1bf-82051cddb75e */ SELECT `gr`.`repo_name` AS `repo_name`, `gr`.`description` AS `description`, `gr`.`primary_language` AS `primary_language`, `gr`.`stars` AS `stars`, `gr`.`forks` AS `forks`, `gu`.`login` AS `owner_login`, DATE_FORMAT(`gr`.`created_at`, '%Y-%m-%d %H:%i:%s') AS `created_at`, DATE_FORMAT(`gr`.`updated_at`, '%Y-%m-%d %H:%i:%s') AS `updated_at` FROM `github_repos` AS `gr` LEFT JOIN `github_users` AS `gu` ON `gr`.`owner_id` = `gu`.`id` WHERE `gr`.`description` LIKE '%car%' OR `gr`.`description` LIKE '%auto%' OR `gr`.`description` LIKE '%vehicle%' ORDER BY `stars` DESC LIMIT 10;
/* questionId: fc09ed3b-fc24-45d8-ae50-c7e2ac33d739 */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_repos` AS `gr` LEFT JOIN `github_events` AS `ge` ON `gr`.`repo_id` = `ge`.`repo_id` WHERE `gr`.`description` LIKE '%COBOL%' GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 20;
select sql_digest, plan_digest from mysql.plan_replayer_task;
/* questionId: d66bac7f-e751-4766-9c34-5ab395673214 */ SELECT gr.repo_name AS repo_name, gr.primary_language, gr.stars, gr.forks FROM github_repos gr WHERE gr.repo_name != 'automatic1111' AND gr.primary_language IN (SELECT gr2.primary_language FROM github_repos gr2 WHERE gr2.repo_name = 'automatic1111') ORDER BY gr.stars DESC LIMIT 10;
/* questionId: 4d4b8b94-d834-4c67-98f9-727750df0219 */ SELECT DISTINCT `gr`.`repo_name` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'PullRequestEvent' AND (`ge`.`action` = 'closed' OR `ge`.`pr_merged` = 1) AND `ge`.`created_at` > DATE_SUB(NOW(), INTERVAL 7 DAY) AND `gr`.`stars` BETWEEN 30 AND 100 AND `ge`.`actor_id` IN (SELECT `id` FROM `github_users` WHERE `country_code` = 'IN');
/* questionId: 606c703c-6730-4934-bb1b-057ed6adbcd6 */ SELECT `repo_name`, `stars` FROM `github_repos` WHERE `description` LIKE '%AI%' OR `description` LIKE '%ML%' AND YEAR(`created_at`) = 2023 ORDER BY `stars` DESC LIMIT 20;
SELECT     gr.repo_id,     gr.repo_name,     gr.owner_id,     gr.owner_login,     gr.owner_is_org FROM github_repos gr WHERE          gr.repo_id IN (680030799)     ;
/* questionId: 806b9402-43b2-4418-91d9-48d8e1f80ea3 */ SELECT `gr`.`repo_name` AS `repo_name`, COUNT(*) AS `stars` FROM `github_events` `ge` JOIN `github_repos` `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `ge`.`action` = 'started' AND LOWER(`gr`.`description`) LIKE LOWER('%chatbot%') GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 20;
/* questionId: 7e4fe901-09f7-4042-8cea-ff3838cea375 */ SELECT `gr`.`repo_name`, COUNT(*) AS `contributions` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` INNER JOIN `github_users` AS `gu` ON `ge`.`actor_id` = `gu`.`id` WHERE `gu`.`organization` = 'Microsoft' AND `ge`.`type` IN ('PullRequestEvent', 'PushEvent', 'IssueCommentEvent', 'IssuesEvent', 'PullRequestReviewCommentEvent') AND `ge`.`created_at` >= DATE_SUB(NOW(), INTERVAL 1 YEAR) GROUP BY `gr`.`repo_name` ORDER BY `contributions` DESC LIMIT 20;
/* questionId: 5b000d84-0513-449b-8bd8-7b14c29f9da4 */ SELECT DISTINCT gr.repo_name FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id WHERE ge.type = 'PullRequestEvent' AND (ge.action = 'closed' OR ge.action = 'merged') AND gr.stars BETWEEN 30 AND 100 AND ge.created_at > DATE_SUB(NOW(), INTERVAL 5 DAY) AND ge.actor_id IN (SELECT id FROM github_users WHERE country_code = 'IN');
/* questionId: d778c4ae-4aca-4007-afde-e982adf8e232 */ SELECT `gr`.`repo_name`, `gr`.`stars`, `gr`.`forks`, `gr`.`description`, `gr`.`primary_language`, `gr`.`license`, `gr`.`pushed_at`, `gr`.`created_at`, `gr`.`updated_at` FROM `github_repos` AS `gr` WHERE LOWER(`gr`.`description`) LIKE LOWER('%natural language to SQL%') AND `gr`.`pushed_at` > DATE_SUB(NOW(), INTERVAL 3 MONTH) ORDER BY `gr`.`stars` DESC LIMIT 20;
/* questionId: 9e276415-1f73-4e94-a80b-89a1ce79ff5a */ SELECT DATE(created_at) AS date, COUNT(*) AS commit_count FROM github_events WHERE type = 'PushEvent' AND repo_id IN (SELECT repo_id FROM github_repos WHERE primary_language = 'Rust') AND created_at BETWEEN '2023-11-01' AND '2023-12-31' GROUP BY DATE(created_at) ORDER BY date;
/* questionId: 01c84d21-4cb0-4f3b-b8ad-489c41e9d309 */ SELECT repo_name, description FROM github_repos WHERE LOWER(repo_name) LIKE '%mern%' OR LOWER(description) LIKE '%mern%' LIMIT 100;
/* questionId: defb4123-fd41-4fc5-836c-1f3d97c307d1 */ SELECT COUNT(*) AS total_event_count FROM github_events WHERE created_at >= '2023-11-01' AND created_at < '2023-12-01';
/* questionId: 1f3d302e-cefc-42d2-89c3-f5cb7d89f1ad */ SELECT `repo_name`, `stars`, `forks`, `created_at`, `updated_at` FROM `github_repos` ORDER BY `forks` ASC, `stars` DESC LIMIT 1;
SELECT t_month AS event_month, xs, s, m, l, xl, xxl, all_size FROM (     SELECT         t_month,         SUM(CASE WHEN (additions + deletions) < 10 THEN 1 ELSE 0 END) OVER(PARTITION BY t_month) AS xs,         SUM(CASE WHEN (additions + deletions) >= 10 AND (additions + deletions) < 30 THEN 1 ELSE 0 END) OVER(PARTITION BY t_month) AS s,         SUM(CASE WHEN (additions + deletions) >= 30 AND (additions + deletions) < 100 THEN 1 ELSE 0 END) OVER(PARTITION BY t_month) AS m,         SUM(CASE WHEN (additions + deletions) >= 100 AND (additions + deletions) < 500 THEN 1 ELSE 0 END) OVER(PARTITION BY t_month) AS l,         SUM(CASE WHEN (additions + deletions) >= 500 AND (additions + deletions) < 1000 THEN 1 ELSE 0 END) OVER(PARTITION BY t_month) AS xl,         SUM(CASE WHEN (additions + deletions) >= 1000 THEN 1 ELSE 0 END) OVER (PARTITION BY t_month) AS xxl,         COUNT(*) OVER (PARTITION BY t_month) AS all_size,         ROW_NUMBER() OVER (PARTITION BY t_month) AS row_num     FROM (         SELECT             DATE_FORMAT(created_at, '%Y-%m-01') as t_month,             additions,             deletions         FROM             github_events         WHERE             type = 'PullRequestEvent'             AND repo_id = 724712             AND action = 'opened'     ) sub ) sub WHERE row_num = 1 ORDER BY t_month ;
/* questionId: 0bacee0f-a6b6-4a80-b252-13312361edaf */ SELECT gu.country_code AS country_code, COUNT(*) AS num_of_pull_requests FROM github_events ge INNER JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'opened' AND DATE(ge.created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY) GROUP BY gu.country_code ORDER BY num_of_pull_requests DESC LIMIT 10;
/* questionId: 6c9d1356-8ca8-4512-a90b-abbb042f6bb4 */ SELECT DISTINCT gr.repo_name FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id JOIN github_users gu ON ge.actor_id = gu.id WHERE ge.type = 'PullRequestEvent' AND ge.action = 'closed' AND gu.country_code = 'IN' AND gr.stars BETWEEN 30 AND 100 AND ge.created_at >= '2024-01-10 00:00:00' AND ge.created_at <= '2024-01-14 23:59:59';
/* questionId: a8776da3-9c02-41cc-a284-08e326a90b8d */ SELECT repo_name, stars FROM github_repos WHERE description LIKE '%AI%' ORDER BY stars DESC LIMIT 10;
WITH group_by_area AS (     SELECT         gu.country_code AS country_or_area,         COUNT(DISTINCT ge.actor_login) as cnt     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         ge.repo_id IN (507775, 60246359, 17165658, 41986369, 16563587, 6838921, 108110, 166515022, 48833910, 156018, 50229487, 20089857, 5349565, 6934395, 6358188, 11008207, 19961085, 206444, 30753733, 105944401, 31006158, 99919302, 50874442, 84240850, 28738447, 44781140, 372536760, 13124802, 146459443, 28449431, 23418517, 206417, 9342529, 19257422, 196353673, 172104891, 402945349, 11225014, 2649214, 41349039, 114187903, 20587599, 19816070, 69400326, 927442, 24494032)         AND ge.type = 'IssuesEvent'         AND ge.action = 'opened'         AND gu.country_code NOT IN ('', 'N/A', 'UND')     GROUP BY country_or_area ), summary AS (     SELECT SUM(cnt) AS total FROM group_by_area ) SELECT     country_or_area,     cnt AS count,     cnt / summary.total AS percentage FROM group_by_area, summary ORDER BY cnt DESC ;
SELECT gr.primary_language AS language, COUNT(*) AS repos, SUM(gr.stars) AS stars, SUM(gr.forks) AS forks FROM github_repos gr WHERE gr.primary_language != '' GROUP BY gr.primary_language ORDER BY stars DESC;
/* questionId: 7704cb7f-0a82-4d8d-be34-14646692f848 */ SELECT repo_name, stars FROM github_repos WHERE primary_language = 'Elixir' ORDER BY stars DESC LIMIT 10;
SELECT gr.repo_name AS repo_name, COUNT(*) AS num_robot_files FROM github_events ge JOIN github_repos gr ON ge.repo_id = gr.repo_id WHERE gr.description LIKE '%.robot%' GROUP BY gr.repo_name ORDER BY num_robot_files DESC LIMIT 1;
WITH reviews AS (     SELECT         DATE_FORMAT(created_at, '%Y-%m-01') AS t_month,         COUNT(*) AS cnt     FROM github_events ge     WHERE         type = 'PullRequestReviewEvent'         AND action = 'created'         AND actor_id = 18442649              GROUP BY 1     ORDER BY 1 ), review_comments AS (     SELECT         DATE_FORMAT(created_at, '%Y-%m-01') AS t_month,         COUNT(*) AS cnt     FROM github_events ge     WHERE         type = 'PullRequestReviewCommentEvent'         AND action = 'created'         AND actor_id = 18442649              GROUP BY 1     ORDER BY 1 ) SELECT     r.t_month AS event_month,     IFNULL(r.cnt, 0) AS reviews,     IFNULL(rc.cnt, 0) AS review_comments FROM reviews r JOIN review_comments rc ON r.t_month = rc.t_month;
/* questionId: 2fee75dc-8e27-4bdc-8d3e-fac174163587 */ SELECT `repo_name`, COUNT(*) AS `num_of_issues` FROM `github_events` WHERE `type` = 'IssuesEvent' GROUP BY `repo_name` ORDER BY `num_of_issues` DESC LIMIT 1;
/* questionId: 82f7443c-732b-4215-931a-108ec6db053c */ SELECT `gr`.`repo_name`, COUNT(*) AS `stars` FROM `github_events` AS `ge` INNER JOIN `github_repos` AS `gr` ON `ge`.`repo_id` = `gr`.`repo_id` WHERE `ge`.`type` = 'WatchEvent' AND `ge`.`created_at` >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND `gr`.`description` LIKE '%AI%' GROUP BY `gr`.`repo_name` ORDER BY `stars` DESC LIMIT 10;
/* questionId: d7c8f6df-38d8-44dc-8d36-2729b9611e34 */ SELECT repo_name, description, primary_language, stars, forks FROM github_repos WHERE description LIKE '%network diagrams%' AND description LIKE '%AI Vision%' ORDER BY stars DESC LIMIT 5;
/* questionId: 74517f52-96ea-4575-af26-d439da4789e7 */ SELECT repo_name, stars FROM github_repos WHERE description LIKE '%machine learning%' OR description LIKE '%deep learning%' OR description LIKE '%AI%' AND updated_at > DATE_SUB(NOW(), INTERVAL 30 DAY) ORDER BY stars DESC LIMIT 10;
/* questionId: efc77fe8-c0ab-483a-bd69-c1a6402accf9 */ SELECT gr.repo_name AS repo_name, gr.updated_at AS updated_at FROM github_repos gr WHERE gr.description LIKE '%LLM%' ORDER BY gr.updated_at DESC LIMIT 1;
/* questionId: 2e6abee8-f644-4775-944f-73574c33645b */ SELECT gr.repo_name AS repo_name, gr.stars AS stars, gr.primary_language AS primary_language FROM github_repos gr WHERE LOWER(gr.description) LIKE LOWER('%Libida for Her%') ORDER BY stars DESC LIMIT 10;
/* questionId: 4ef5e61c-e182-40f5-96d0-3cf758ea4921 */ SELECT gr.repo_name AS repo_name, gr.stars AS stars, CONCAT('https://github.com/', gr.repo_name) AS link FROM github_repos gr WHERE gr.description LIKE '%A-Frame%' ORDER BY stars DESC LIMIT 100;
/* questionId: e5f366ef-7706-44e2-bb38-177015f3a84d */ SELECT `login` AS `user_login`, `followers` AS `followers` FROM `github_users` ORDER BY `followers` DESC LIMIT 10;
/* questionId: 4a029482-9485-4075-bc5e-a82af656138e */ SELECT gr.repo_name AS label, gr.primary_language AS value FROM github_repos gr WHERE gr.description LIKE '%MySQL%' AND (gr.description LIKE '%validation%' OR gr.description LIKE '%schema change%' OR gr.description LIKE '%diff%') ORDER BY gr.stars DESC LIMIT 5;
/* questionId: f5b3eff7-1943-45f2-91de-1036faca99c6 */ SELECT `repo_name`, `stars` FROM `github_repos` WHERE LOWER(`description`) LIKE LOWER('%token%') AND LOWER(`description`) LIKE LOWER('%.net 6%') ORDER BY `stars` DESC LIMIT 5;
WITH group_by_area AS (     SELECT         gu.country_code AS country_or_area,         COUNT(1) as cnt     FROM github_events ge     LEFT JOIN github_users gu ON ge.actor_login = gu.login     WHERE         repo_id IN (513726216)         AND ge.type = 'WatchEvent'         AND ge.action = 'started'         AND ge.created_at > DATE_SUB(CURRENT_DATE(), INTERVAL 28 DAY)         AND gu.country_code NOT IN ('', 'N/A', 'UND')     GROUP BY country_or_area ), summary AS (     SELECT SUM(cnt) AS total FROM group_by_area ) SELECT      country_or_area,     cnt AS count,     cnt / summary.total AS percentage FROM group_by_area, summary ORDER BY cnt DESC ;
SELECT gr.repo_name, gr.stars, gr.description FROM github_repos gr WHERE YEAR(gr.created_at) = 2023 ORDER BY gr.stars DESC LIMIT 50;
/* questionId: 88cc66fc-012d-46a4-8e5d-5dd8c811231c */ SELECT gr.repo_name AS repo_name, CONCAT('https://github.com/', gr.repo_name) AS link FROM github_repos gr WHERE gr.primary_language = 'aframe' ORDER BY gr.stars DESC LIMIT 100;
/* questionId: b0a19908-0942-4cc8-8247-0c1b76f1fcad */ SELECT `repo_name`, `stars` FROM `github_repos` WHERE YEAR(`created_at`) = 2023 ORDER BY `stars` DESC LIMIT 10;
/* questionId: 3c51b383-8e50-47c5-b925-ae29f4c46555 */ SELECT repo_name, primary_language, stars, created_at FROM github_repos WHERE description LIKE '%AI%' ORDER BY stars DESC, created_at DESC LIMIT 10;
/* questionId: 9dc8a162-9b3f-4efd-aab1-ef4db7f7d70b */ SELECT repo_name, owner_login, stars, forks, description, primary_language, created_at FROM github_repos WHERE created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH) ORDER BY stars DESC, forks DESC LIMIT 10;
/* questionId: 683692d6-5f33-426a-8b29-62b97371bb69 */ SELECT DATE_FORMAT(`created_at`, '%Y-%m-01') AS `t_month`, COUNT(*) AS `new_repos` FROM `github_repos` WHERE YEAR(`created_at`) >= 2017 GROUP BY `t_month` ORDER BY `t_month` ASC;
/* questionId: 17fe61e8-27ae-4bd7-947a-53092a86536b */ SELECT repo_name AS title, description FROM github_repos WHERE primary_language = 'MERN' AND YEAR(created_at) = 2023 ORDER BY stars DESC LIMIT 100;
/* questionId: fb3da94c-7d67-4012-adf6-6ddbf871a92b */ SELECT `gr`.`owner_login` AS `org_login`, SUM(`gr`.`stars`) AS `stars` FROM `github_repos` AS `gr` WHERE `gr`.`owner_is_org` = 1 GROUP BY `gr`.`owner_login` ORDER BY `stars` DESC LIMIT 30;